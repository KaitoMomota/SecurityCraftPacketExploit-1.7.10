package fr.kaitomomota.securitycraftmodexploit.commands;

import java.util.List;

import fr.kaitomomota.securitycraftmodexploit.SecurityCraftModExploit;
import fr.kaitomomota.securitycraftmodexploit.securitycraft.packets.PacketSender;
import net.minecraft.block.Block;
import net.minecraft.command.CommandBase;
import net.minecraft.command.ICommand;
import net.minecraft.command.ICommandSender;
import net.minecraft.util.ChatComponentText;

public class CommandPriseSetBlock extends CommandBase implements ICommand {
	
	private PacketSender packetSender = SecurityCraftModExploit.getInstance().getController().getPacketSender();

	@Override
	public String getCommandName() {
		return "prisesetblock";
	}

	@Override
	public String getCommandUsage(ICommandSender sender) {
		return "command.prisesetblock.usage";
	}

	@Override
	public void processCommand(ICommandSender sender, String[] args) {
		if (args.length >= 4) {
			String blockIdAndMeta = args[0];
			
			String xString = args[1];
			String yString = args[2];
			String zString = args[3];
			
			String blockId = "";
			String meta = "0";
			if (blockIdAndMeta.contains(":")) {
				blockId = blockIdAndMeta.split(":")[0];
				meta = blockIdAndMeta.split(":")[1];
			} else {
				blockId = blockIdAndMeta;
			}
			
			if (isInteger(xString) && isInteger(yString) && isInteger(zString) && isInteger(blockId) && isInteger(meta)) {
				
				int id = Integer.valueOf(blockId);
				int x = Integer.valueOf(xString);
				int y = Integer.valueOf(yString);
				int z = Integer.valueOf(zString);
				int metadata = Integer.valueOf(meta);
				String blockName = Block.blockRegistry.getNameForObject(Block.getBlockById(id));
				
				packetSender.sendExploitPacket(x, y, z, blockName, metadata);
				
				sender.addChatMessage(new ChatComponentText("Put a block of " + Block.blockRegistry.getNameForObject(Block.getBlockById(id)).split(":")[1] + " on X:" + x + ", Y:" + y + ", Z:" + z + " !"));
			} else {
				sender.addChatMessage(new ChatComponentText("Syntax: /prisesetblock <ID> <X> <Y> <Z>"));
			}
			
		}
	}
	
	private boolean isInteger(String prenum) {
		try {
			Integer.valueOf(prenum);
			return true;
		} catch (NumberFormatException e) {
			return false;
		}
	}


}
